#!/usr/bin/env bash
#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
# Suggesged to Place under Quick Open  PATTERN: /usr/local/bin/guake_quick_open_file_opener %(file_path)s:%(line_number)s

echo "You cliked: ${@}"
function file_extension() {
    #
    # Outputs the file extension given a file name
    #
    # $1 - Filename
    #
    # Usage: extension=$(file_extension "foo/bar.baz")
    #   Result: $extension ==> "baz"
    #
    #
    local test_value=$(echo "${1##*.}")
    if [[ "${test_value}" == *":"* ]] ; then
    {
        echo "${test_value}" | cut -d":" -f1
    } 
    else 
    {
        echo "${test_value}"
    }
    fi
} # noitcunf file_extension

function default_editor() {
     [ -f .temp_keys ] && . .temp_keys 
    if [[  -n "${EDITOR}" ]] ; then 
    {
        if ( command -v "${EDITOR}" >/dev/null 2>&1 ); then 
        {
           "${EDITOR}" ${@}
           return 0
        }
        fi

    }
    fi
        if ( command -v code >/dev/null 2>&1 ); then 
        {
           code -g ${*}
           return 0
        }
        fi        
        if ( command -v subl >/dev/null 2>&1 ); then 
        {
           subl  ${*}
           return 0
        }
        fi
        if ( command -v code-insiders >/dev/null 2>&1 ); then 
        {
           code-insiders -g  ${*}
           return 0
        }
        fi



} # end function default_editor

clicked_extension=$(file_extension "${@}")
echo $clicked_extension
# If inside a JetBrains Folder is located, Assumption that you have installed it
if [ -d ./.idea/ ] || [ -d .idea/ ] || [ -d ../.idea/ ] || [ -d ../../.idea/ ] || [ -d ../../../.idea/ ] || [ -d ../../../../.idea/ ] || [ -d ../../../../../.idea/ ] || [ -d ../../../../../../.idea/ ]; then
    {
        # rails
        if (
            [ -f ./Gemfile.lock ] || [ -f Gemfile.lock ] || [ -f ../Gemfile.lock ] || [ -f ../../Gemfile.lock ] || [ -f ../../../Gemfile.lock ] || [ -f ../../../../Gemfile.lock ] || [ -f ../../../../../Gemfile.lock ] || [ -f ../../../../../../Gemfile.lock ]
        ) ||
            (
                [[ "${clicked_extension}" == "rb" ]]
            ); then
            {
                mine ${@}
            }
        elif
            (# laravel
                [ -f ./composer.lock ] || [ -f composer.lock ] || [ -f ../composer.lock ] || [ -f ../../composer.lock ] || [ -f ../../../composer.lock ] || [ -f ../../../../composer.lock ] || [ -f ../../../../../composer.lock ] || [ -f ../../../../../../composer.lock ]
            ) ||
            (# wordpress
                [ -f ./wp-config.php ] || [ -f wp-config.php ] || [ -f ../wp-config.php ] || [ -f ../../wp-config.php ] || [ -f ../../../wp-config.php ] || [ -f ../../../../wp-config.php ] || [ -f ../../../../../wp-config.php ] || [ -f ../../../../../../wp-config.php ]
            ) ||
            (# the valet folder project $HOME/.valet or $HOME/.config/.valet
                # bin  cli  composer.json  develop  LICENSE.txt  readme.md  SECURITY.md  server.php  valet
                # bin  cli  composer.json  composer.lock  develop  LICENSE.txt  readme.md  SECURITY.md  server.php  valet  vendor
                [ -d ./bin ] && [ -d ./cli ] && [ -f ./composer.json ] && [ -f ./develop ] && [ -f ./LICENSE.txt ] && [ -f ./readme.md ] && [ -f ./SECURITY.md ] && [ -f ./server.php ] && [ -f ./valet ]
            ) ||
            (# just composer project
                   ([ -f ./composer.json ] && [ -f ./composer.lock ] && [ -d ./vendor ])   || \
                   ([ -f ../composer.json ] && [ -f ../composer.lock ] && [ -d ../vendor ]) || \
                   ([ -f ../../composer.json ] && [ -f ../../composer.lock ] && [ -d ../../vendor ]) || \
                   ([ -f ../../../composer.json ] && [ -f ../../../composer.lock ] && [ -d ../../../vendor ])
            ) ||
            (
                [[ "${clicked_extension}" == "php" ]]
            ) ; then 
            {
                pstorm ${@}
            }
        elif
            (# cds by SAP
             # apis  bin  CHANGELOG.md  common.cds  developer-license-3.1.txt  etc  _i18n  lib  package.json  package-lock.json  README.md  server.js  SIGNATURE.SMF
                ([ -f ./package.json ] && [ -f ./SIGNATURE.SMF ] && [ -d ./apis  ])
           ) ||
            (
                [[ "${clicked_extension}" == "js" ]]
            ) ; then
            {
                webstorm ${@}
            }
        elif
            (# typescript REACT
            # cloudbuild.yaml        cypress       global.d.ts                        jest.config.js  OWNERS             packages   terraform             tsconfig.json
            # commit_exception.list  cypress.json  Jenkinsfile-Editor-CleanUp-GCloud  lerna.json      package.json       README.md  test                  unstage_exception_list
            # cors-bucket-config.js  e2e           Jenkinsfile-Editor-E2E-Test        node_modules    package-lock.json  scripts    tsconfig.eslint.json  yarn.lock
                ([ -f ./package.json ] && [ -f ./tsconfig.json ]  && [ -f ./tsconfig.json ] && [ -d ./cypress  ])
           ) ||
            (
                [[ "${clicked_extension}" == "tsx" ]]
            ) ; then
            {
                webstorm ${@}
            }
        elif
            (# guake
             # AUTHORS    COPYING  env        guake        Makefile     NEWS.rst  Pipfile.lock  pyproject.toml  releasenotes          requirements.txt  setup.cfg
             # ChangeLog  docs     git-hooks  MAINTAINERS  MANIFEST.in  Pipfile   po            README.rst      requirements-dev.txt  scripts           setup.py
                ([ -f ./setup.py ] && [ -f ./Pipfile ] && [ -d ./guake  ])
           ) ||
            (
                [[ "${clicked_extension}" == "py" ]]
            )
        then
            {
                charm ${@}
            }
        elif
            (
                [[ "${clicked_extension}" == "sh" ]]
            )
        then
            {
                default_editor -g ${@}
            }
        else  # any pattern above or combination fails, --> default to code
            {
                default_editor -g ${@}
            }
        fi
    }
else
    {
        default_editor -g ${@}
    }
fi
